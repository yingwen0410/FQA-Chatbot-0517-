[
  {
    "Question": "什麼是人工智慧？",
    "Answer": "人工智慧 (Artificial Intelligence, AI) 是研究、開發用於模擬、延伸和擴展人類智慧的理論、方法、技術及應用系統的一門新的技術科學。",
    "Keywords": ["人工智慧", "AI", "模擬", "延伸", "擴展", "人類智慧", "理論", "方法", "技術", "應用系統"]
  },
  {
    "Question": "軟體開發的流程有哪些？",
    "Answer": "軟體開發流程通常包括需求分析、設計、編碼、測試、部署和維護等階段。",
    "Keywords": ["軟體開發", "流程", "需求分析", "設計", "編碼", "測試", "部署", "維護"]
  },
  {
    "Question": "AI 領域的熱門技術有哪些？",
    "Answer": "AI 領域的熱門技術包括機器學習、深度學習、自然語言處理、電腦視覺等。",
    "Keywords": ["AI", "人工智慧", "領域", "熱門技術", "機器學習", "深度學習", "自然語言處理", "NLP", "電腦視覺"]
  },
  {
    "Question": "如何學習軟體開發？",
    "Answer": "學習軟體開發可以透過線上課程、書籍、實作專案、參與社群等方式進行。",
    "Keywords": ["學習", "軟體開發", "線上課程", "書籍", "實作專案", "社群"]
  },
  {
    "Question": "深度學習是什麼？",
    "Answer": "深度學習是機器學習的一個分支，其靈感來自人腦的結構和功能，使用多層人工神經網路來學習資料的表示。",
    "Keywords": ["深度學習", "機器學習", "分支", "人腦", "結構", "功能", "人工神經網路", "資料表示"]
  },
  {
    "Question": "常用的程式設計語言有哪些？",
    "Answer": "常用的程式設計語言包括 Python、Java、C++、JavaScript、C# 等。",
    "Keywords": ["程式設計語言", "Python", "Java", "C++", "JavaScript", "C#"]
  },
  {
    "Question": "自然語言處理 (NLP) 的應用有哪些？",
    "Answer": "自然語言處理的應用包括機器翻譯、語音辨識、情感分析、文本摘要、聊天機器人等。",
    "Keywords": ["自然語言處理", "NLP", "應用", "機器翻譯", "語音辨識", "情感分析", "文本摘要", "聊天機器人"]
  },
  {
    "Question": "什麼是敏捷開發？",
    "Answer": "敏捷開發是一種以迭代和協作為核心的軟體開發方法，強調快速響應變化和持續交付價值。",
    "Keywords": ["敏捷開發", "迭代", "協作", "軟體開發方法", "快速響應變化", "持續交付價值"]
  },
  {
    "Question": "機器學習的常見演算法有哪些？",
    "Answer": "機器學習的常見演算法包括線性回歸、邏輯回歸、支持向量機、決策樹、隨機森林、K-近鄰等。",
    "Keywords": ["機器學習", "演算法", "線性回歸", "邏輯回歸", "支持向量機", "決策樹", "隨機森林", "K-近鄰"]
  },
  {
    "Question": "什麼是 RESTful API？",
    "Answer": "RESTful API 是一種遵循 REST (Representational State Transfer) 架構風格的應用程式介面，通常使用 HTTP 協定進行通訊。",
    "Keywords": ["RESTful API", "REST", "Representational State Transfer", "架構風格", "應用程式介面", "HTTP"]
  },
  {
    "Question": "卷積神經網路 (CNN) 主要應用於哪些領域？",
    "Answer": "卷積神經網路主要應用於電腦視覺領域，例如圖像分類、物件偵測、圖像分割等。",
    "Keywords": ["卷積神經網路", "CNN", "電腦視覺", "圖像分類", "物件偵測", "圖像分割"]
  },
  {
    "Question": "什麼是單元測試？",
    "Answer": "單元測試是針對軟體中最小的可測試單元（例如，函數或方法）進行驗證的測試。",
    "Keywords": ["單元測試", "軟體測試", "可測試單元", "函數", "方法", "驗證"]
  },
  {
    "Question": "遞歸神經網路 (RNN) 適用於處理什麼類型的資料？",
    "Answer": "遞歸神經網路適用於處理序列資料，例如時間序列、文本、語音等。",
    "Keywords": ["遞歸神經網路", "RNN", "序列資料", "時間序列", "文本", "語音"]
  },
  {
    "Question": "什麼是版本控制系統？Git 的作用是什麼？",
    "Answer": "版本控制系統用於追蹤和管理檔案的變更歷史。Git 是一個流行的分散式版本控制系統，用於協同開發和管理程式碼。",
    "Keywords": ["版本控制系統", "Git", "追蹤", "管理", "檔案變更歷史", "分散式", "協同開發", "管理程式碼"]
  },
  {
    "Question": "強化學習 (Reinforcement Learning) 的基本概念是什麼？",
    "Answer": "強化學習是一種讓 Agent 在環境中透過試錯學習如何採取行動以最大化獎勵的機器學習方法。",
    "Keywords": ["強化學習", "Reinforcement Learning", "Agent", "環境", "試錯學習", "行動", "最大化獎勵", "機器學習"]
  },
  {
    "Question": "什麼是物件導向程式設計 (OOP)？",
    "Answer": "物件導向程式設計是一種程式設計範式，它使用「物件」的概念來組織程式碼，物件包含資料（屬性）和操作資料的方法。",
    "Keywords": ["物件導向程式設計", "OOP", "程式設計範式", "物件", "組織程式碼", "資料", "屬性", "方法"]
  },
  {
    "Question": "Transformer 模型在自然語言處理中的重要性是什麼？",
    "Answer": "Transformer 模型引入了自注意力機制，能夠更好地捕捉文本中的長距離依賴關係，是現代 NLP 模型（如 BERT、GPT）的基礎。",
    "Keywords": ["Transformer 模型", "自然語言處理", "NLP", "重要性", "自注意力機制", "捕捉", "長距離依賴關係", "BERT", "GPT"]
  },
  {
    "Question": "什麼是持續整合 (CI) 和持續部署 (CD)？",
    "Answer": "持續整合是一種頻繁地將程式碼變更合併到共享儲存庫的實踐，而持續部署則是在程式碼通過測試後自動將其部署到生產環境。",
    "Keywords": ["持續整合", "CI", "持續部署", "CD", "程式碼變更", "合併", "共享儲存庫", "實踐", "自動部署", "生產環境"]
  },
  {
    "Question": "生成對抗網路 (GAN) 的原理是什麼？",
    "Answer": "生成對抗網路包含一個生成器和一個判別器，它們相互對抗訓練，生成器嘗試生成逼真的假資料，而判別器嘗試區分真假資料。",
    "Keywords": ["生成對抗網路", "GAN", "原理", "生成器", "判別器", "對抗訓練", "假資料", "區分", "真假資料"]
  },
  {
    "Question": "什麼是微服務架構？",
    "Answer": "微服務架構是一種將應用程式分解為一組小型、獨立的服務的架構風格，這些服務可以獨立開發、部署和擴展。",
    "Keywords": ["微服務架構", "應用程式", "分解", "小型服務", "獨立", "開發", "部署", "擴展"]
  },
  {
    "Question": "機器學習模型的評估指標有哪些？",
    "Answer": "機器學習模型的評估指標包括準確率、精確度、召回率、F1 分數、AUC、均方誤差等，具體取決於任務類型。",
    "Keywords": ["機器學習模型", "評估指標", "準確率", "精確度", "召回率", "F1 分數", "AUC", "均方誤差", "任務類型"]
  },
  {
    "Question": "什麼是 Docker 和容器化？",
    "Answer": "Docker 是一個平台，用於將應用程式及其依賴項打包到稱為容器的可移植單元中，容器化可以提供隔離性、一致性和可重複性。",
    "Keywords": ["Docker", "容器化", "平台", "應用程式", "依賴項", "打包", "容器", "可移植", "隔離性", "一致性", "可重複性"]
  },
  {
    "Question": "注意力機制 (Attention Mechanism) 在深度學習中的作用是什麼？",
    "Answer": "注意力機制允許模型在處理序列資料時，動態地關注輸入序列的不同部分，從而提高模型性能，尤其是在處理長序列時。",
    "Keywords": ["注意力機制", "Attention Mechanism", "深度學習", "作用", "序列資料", "動態關注", "輸入序列", "提高性能", "長序列"]
  },
  {
    "Question": "什麼是 NoSQL 資料庫？與傳統的 SQL 資料庫有什麼區別？",
    "Answer": "NoSQL (Not Only SQL) 資料庫是一種非關聯式資料庫，與傳統的 SQL 資料庫（使用表格和結構化查詢語言）不同，NoSQL 資料庫具有不同的資料模型，例如鍵值對、文檔、圖形等，更適合處理非結構化或半結構化資料。",
    "Keywords": ["NoSQL 資料庫", "SQL 資料庫", "非關聯式", "傳統", "表格", "結構化查詢語言", "資料模型", "鍵值對", "文檔", "圖形", "非結構化資料", "半結構化資料"]
  },
  {
    "Question": "遷移學習 (Transfer Learning) 的優勢是什麼？",
    "Answer": "遷移學習是一種將在一個任務上學習到的知識應用到另一個相關任務上的機器學習方法，其優勢是可以減少訓練資料的需求和加快模型收斂速度。",
    "Keywords": ["遷移學習", "Transfer Learning", "優勢", "任務", "知識", "應用", "機器學習", "減少訓練資料", "加快模型收斂"]
  },
  {
    "Question": "什麼是 API Gateway？在微服務架構中的作用是什麼？",
    "Answer": "API Gateway 是微服務架構中的一個入口點，它接收來自客戶端的請求，並將其路由到後端的相應微服務。它還可以處理身份驗證、請求轉換、速率限制等功能。",
    "Keywords": ["API Gateway", "微服務架構", "入口點", "客戶端", "請求", "路由", "後端服務", "身份驗證", "請求轉換", "速率限制"]
  },
  {
    "Question": "模型解釋性 (Model Interpretability) 在 AI 應用中為什麼重要？",
    "Answer": "模型解釋性是指理解機器學習模型如何做出決策的能力。在某些關鍵領域（例如醫療、金融），理解模型的決策過程至關重要，有助於建立信任、發現偏差和進行錯誤分析。",
    "Keywords": ["模型解釋性", "Model Interpretability", "AI 應用", "重要性", "理解", "機器學習模型", "決策", "醫療", "金融", "信任", "偏差", "錯誤分析"]
  },
  {
    "Question": "什麼是邊緣計算 (Edge Computing)？在 AI 應用中有哪些潛力？",
    "Answer": "邊緣計算是一種將計算和資料儲存移動到更接近資料來源的網路邊緣的計算範式。在 AI 應用中，邊緣計算可以實現低延遲的推理、保護隱私和減少網路頻寬需求，例如在自動駕駛、智慧城市等領域。",
    "Keywords": ["邊緣計算", "Edge Computing", "AI 應用", "潛力", "計算", "資料儲存", "網路邊緣", "低延遲", "推理", "保護隱私", "減少網路頻寬", "自動駕駛", "智慧城市"]
  },
  {
    "Question": "什麼是資料工程 (Data Engineering)？在 AI 專案中的角色是什麼？",
    "Answer": "資料工程是設計、建構和維護資料系統的學科，旨在支援資料分析和機器學習。在 AI 專案中，資料工程師負責收集、清理、轉換和儲存資料，為模型訓練和部署提供可靠的資料基礎。",
    "Keywords": ["資料工程", "Data Engineering", "AI 專案", "角色", "設計", "建構", "維護", "資料系統", "資料分析", "機器學習", "資料工程師", "收集", "清理", "轉換", "儲存", "資料基礎"]
  },
  {
    "Question": "AI 倫理 (AI Ethics) 主要關注哪些問題？",
    "Answer": "AI 倫理主要關注 AI 系統在開發和應用過程中涉及的道德和社會問題，例如公平性、透明度、問責制、隱私保護、偏見和潛在的負面影響。",
    "Keywords": ["AI 倫理", "AI Ethics", "關注問題", "AI 系統", "開發", "應用", "道德問題", "社會問題", "公平性", "透明度", "問責制", "隱私保護", "偏見", "負面影響"]
  },
  {
    "Question": "如何選擇深度學習框架？",
    "Answer": "根據專案需求，TensorFlow適合生產環境，PyTorch適合研究用途。",
    "Keywords": ["深度學習", "框架", "TensorFlow", "PyTorch", "專案需求", "生產環境", "研究用途"]
  }
]